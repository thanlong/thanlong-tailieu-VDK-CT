CCS PCM C Compiler, Version 5.015, 5967               17-Mar-21 16:29

               Filename:   D:\VIDU TH VDK\DK LED 7 DOAN\MAIN.lst

               ROM used:   92 words (1%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           6 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... //LAP TRINH CHO VI DIEU KHIEN PIC 
.................... //DIEU KHIEN 1 LED 7 DOAN HIEN THI TU O DEN 9 
....................  
.................... #include<16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses hs 
.................... #use delay(clock=4M) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #byte portb=0x06 
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... { 
....................    set_tris_b(0);//Thuc hien 1 lan  
0024:  MOVLW  00
0025:  MOVWF  06
....................     
....................    while(1) 
....................    { 
....................       portb = 0b11000000; 
0026:  MOVLW  C0
0027:  BCF    03.5
0028:  MOVWF  06
....................       delay_ms(100); 
0029:  MOVLW  64
002A:  MOVWF  21
002B:  CALL   004
....................       portb= 0xf9; 
002C:  MOVLW  F9
002D:  MOVWF  06
....................       delay_ms(100); 
002E:  MOVLW  64
002F:  MOVWF  21
0030:  CALL   004
....................       portb= 0xA4; 
0031:  MOVLW  A4
0032:  MOVWF  06
....................       delay_ms(100); 
0033:  MOVLW  64
0034:  MOVWF  21
0035:  CALL   004
....................       portb= 0xB0; 
0036:  MOVLW  B0
0037:  MOVWF  06
....................       delay_ms(100); 
0038:  MOVLW  64
0039:  MOVWF  21
003A:  CALL   004
....................       portb= 0x99; 
003B:  MOVLW  99
003C:  MOVWF  06
....................       delay_ms(100); 
003D:  MOVLW  64
003E:  MOVWF  21
003F:  CALL   004
....................       portb= 0x92; 
0040:  MOVLW  92
0041:  MOVWF  06
....................       delay_ms(100); 
0042:  MOVLW  64
0043:  MOVWF  21
0044:  CALL   004
....................       portb= 0x82; 
0045:  MOVLW  82
0046:  MOVWF  06
....................       delay_ms(100); 
0047:  MOVLW  64
0048:  MOVWF  21
0049:  CALL   004
....................       portb= 0xF8; 
004A:  MOVLW  F8
004B:  MOVWF  06
....................       delay_ms(100); 
004C:  MOVLW  64
004D:  MOVWF  21
004E:  CALL   004
....................       portb= 0x80; 
004F:  MOVLW  80
0050:  MOVWF  06
....................       delay_ms(100); 
0051:  MOVLW  64
0052:  MOVWF  21
0053:  CALL   004
....................       portb= 0x90; 
0054:  MOVLW  90
0055:  MOVWF  06
....................       delay_ms(100); 
0056:  MOVLW  64
0057:  MOVWF  21
0058:  CALL   004
0059:  BSF    03.5
005A:  GOTO   026
....................    } 
.................... } 
005B:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
