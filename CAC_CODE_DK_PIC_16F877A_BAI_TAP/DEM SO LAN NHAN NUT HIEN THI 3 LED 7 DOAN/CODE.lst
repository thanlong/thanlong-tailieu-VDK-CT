CCS PCM C Compiler, Version 5.015, 5967               25-Apr-21 17:53

               Filename:   C:\Users\Dragonlord\Downloads\Compressed\VDK\DEM SO LAN NHAN NUT HIEN THI 3 LED 7 DOAN\CODE.lst

               ROM used:   244 words (3%)
                           Largest free fragment is 2048
               RAM used:   23 (6%) at main() level
                           28 (8%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03E
0003:  NOP
.................... //MO PHONG CO 4 CON LED 7 DOAN CHI QUAN TAM 2 CON CUOI CUNG 
.................... //VI TRI LED CHUC VA DON VI CO THE DOI CHO NHAU 
.................... //DEM SO LAN NHAN NUT HIEN HIHIHIENJ LEN 7SEG ANT 
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
0019:  CLRF   78
001A:  CLRF   79
001B:  CLRF   77
001C:  CLRF   7A
001D:  MOVF   35,W
001E:  BTFSS  03.2
001F:  GOTO   023
0020:  MOVF   34,W
0021:  BTFSC  03.2
0022:  GOTO   03D
0023:  MOVLW  10
0024:  MOVWF  36
0025:  BCF    03.0
0026:  RLF    32,F
0027:  RLF    33,F
0028:  RLF    77,F
0029:  RLF    7A,F
002A:  MOVF   35,W
002B:  SUBWF  7A,W
002C:  BTFSS  03.2
002D:  GOTO   030
002E:  MOVF   34,W
002F:  SUBWF  77,W
0030:  BTFSS  03.0
0031:  GOTO   039
0032:  MOVF   34,W
0033:  SUBWF  77,F
0034:  BTFSS  03.0
0035:  DECF   7A,F
0036:  MOVF   35,W
0037:  SUBWF  7A,F
0038:  BSF    03.0
0039:  RLF    78,F
003A:  RLF    79,F
003B:  DECFSZ 36,F
003C:  GOTO   025
003D:  RETURN
....................  
.................... #list 
....................  
.................... #fuses hs 
.................... #use delay(clock=4000000) 
*
0004:  MOVLW  30
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #byte portd=0x08 
....................  
.................... #bit ra1=0x05.1 
.................... #bit ra2=0x05.2 
.................... #bit ra3=0x05.3 
....................  
.................... #bit rB0=0x06.0 
....................  
.................... int8 maled7[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90}; 
*
004F:  MOVLW  C0
0050:  BCF    03.5
0051:  MOVWF  20
0052:  MOVLW  F9
0053:  MOVWF  21
0054:  MOVLW  A4
0055:  MOVWF  22
0056:  MOVLW  B0
0057:  MOVWF  23
0058:  MOVLW  99
0059:  MOVWF  24
005A:  MOVLW  92
005B:  MOVWF  25
005C:  MOVLW  82
005D:  MOVWF  26
005E:  MOVLW  F8
005F:  MOVWF  27
0060:  MOVLW  80
0061:  MOVWF  28
0062:  MOVLW  90
0063:  MOVWF  29
.................... int tram=0,chuc=0,donvi=0,i=0; 
.................... int16 solan=0; 
.................... void main() 
*
003E:  MOVF   03,W
003F:  ANDLW  1F
0040:  MOVWF  03
0041:  CLRF   2A
0042:  CLRF   2B
0043:  CLRF   2C
0044:  CLRF   2D
0045:  CLRF   2F
0046:  CLRF   2E
0047:  BSF    03.5
0048:  BSF    1F.0
0049:  BSF    1F.1
004A:  BSF    1F.2
004B:  BCF    1F.3
004C:  MOVLW  07
004D:  MOVWF  1C
004E:  BCF    03.7
.................... {  
....................       set_tris_a(0); 
*
0064:  MOVLW  00
0065:  BSF    03.5
0066:  MOVWF  05
....................       set_tris_b(1);// NUT NHAN GAN CHAN RB0 
0067:  MOVLW  01
0068:  MOVWF  06
....................       set_tris_d(0); 
0069:  MOVLW  00
006A:  MOVWF  08
....................       while(1) 
....................       { 
....................          if(rB0==1) 
006B:  BCF    03.5
006C:  BTFSS  06.0
006D:  GOTO   09E
....................          { 
....................             while(rb0==1) 
006E:  BTFSS  06.0
006F:  GOTO   09B
....................             { 
....................                //CHONG NHAY LED 7 DOAN  
....................                PORTD=0XFF; //DANH CHO MO PHONG 
0070:  MOVLW  FF
0071:  MOVWF  08
....................                ra1=0;ra2=1;ra3=1; 
0072:  BCF    05.1
0073:  BSF    05.2
0074:  BSF    05.3
....................                portd=maled7[tram]; 
0075:  MOVLW  20
0076:  ADDWF  2A,W
0077:  MOVWF  04
0078:  BCF    03.7
0079:  MOVF   00,W
007A:  MOVWF  08
....................                delay_ms(5); 
007B:  MOVLW  05
007C:  MOVWF  30
007D:  CALL   004
....................                 
....................                PORTD=0XFF; //DANH CHO MO PHONG 
007E:  MOVLW  FF
007F:  MOVWF  08
....................                ra1=1;ra2=0;ra3=1; 
0080:  BSF    05.1
0081:  BCF    05.2
0082:  BSF    05.3
....................                portd=maled7[chuc]; 
0083:  MOVLW  20
0084:  ADDWF  2B,W
0085:  MOVWF  04
0086:  BCF    03.7
0087:  MOVF   00,W
0088:  MOVWF  08
....................                delay_ms(5); 
0089:  MOVLW  05
008A:  MOVWF  30
008B:  CALL   004
....................                 
....................                PORTD=0XFF; //DANH CHO MO PHONG 
008C:  MOVLW  FF
008D:  MOVWF  08
....................                ra1=1;ra2=1;ra3=0; 
008E:  BSF    05.1
008F:  BSF    05.2
0090:  BCF    05.3
....................                portd=maled7[donvi]; 
0091:  MOVLW  20
0092:  ADDWF  2C,W
0093:  MOVWF  04
0094:  BCF    03.7
0095:  MOVF   00,W
0096:  MOVWF  08
....................                delay_ms(5);     
0097:  MOVLW  05
0098:  MOVWF  30
0099:  CALL   004
009A:  GOTO   06E
....................                //================== 
....................             } 
....................             solan++; 
009B:  INCF   2E,F
009C:  BTFSC  03.2
009D:  INCF   2F,F
....................          } 
....................          tram=solan/100; 
009E:  MOVF   2F,W
009F:  MOVWF  33
00A0:  MOVF   2E,W
00A1:  MOVWF  32
00A2:  CLRF   35
00A3:  MOVLW  64
00A4:  MOVWF  34
00A5:  CALL   019
00A6:  MOVF   78,W
00A7:  MOVWF  2A
....................          chuc=solan/10%10; 
00A8:  MOVF   2F,W
00A9:  MOVWF  33
00AA:  MOVF   2E,W
00AB:  MOVWF  32
00AC:  CLRF   35
00AD:  MOVLW  0A
00AE:  MOVWF  34
00AF:  CALL   019
00B0:  MOVF   79,W
00B1:  MOVWF  31
00B2:  MOVF   78,W
00B3:  MOVWF  30
00B4:  MOVF   79,W
00B5:  MOVWF  33
00B6:  MOVF   78,W
00B7:  MOVWF  32
00B8:  CLRF   35
00B9:  MOVLW  0A
00BA:  MOVWF  34
00BB:  CALL   019
00BC:  MOVF   77,W
00BD:  MOVWF  2B
....................          donvi=solan%10; 
00BE:  MOVF   2F,W
00BF:  MOVWF  33
00C0:  MOVF   2E,W
00C1:  MOVWF  32
00C2:  CLRF   35
00C3:  MOVLW  0A
00C4:  MOVWF  34
00C5:  CALL   019
00C6:  MOVF   77,W
00C7:  MOVWF  2C
....................           
....................          PORTD=0XFF; //DANH CHO MO PHONG 
00C8:  MOVLW  FF
00C9:  MOVWF  08
....................          ra1=0;ra2=1;ra3=1; 
00CA:  BCF    05.1
00CB:  BSF    05.2
00CC:  BSF    05.3
....................          portd=maled7[tram]; 
00CD:  MOVLW  20
00CE:  ADDWF  2A,W
00CF:  MOVWF  04
00D0:  BCF    03.7
00D1:  MOVF   00,W
00D2:  MOVWF  08
....................          delay_ms(5); 
00D3:  MOVLW  05
00D4:  MOVWF  30
00D5:  CALL   004
....................           
....................          PORTD=0XFF; //DANH CHO MO PHONG 
00D6:  MOVLW  FF
00D7:  MOVWF  08
....................          ra1=1;ra2=0;ra3=1; 
00D8:  BSF    05.1
00D9:  BCF    05.2
00DA:  BSF    05.3
....................          portd=maled7[chuc]; 
00DB:  MOVLW  20
00DC:  ADDWF  2B,W
00DD:  MOVWF  04
00DE:  BCF    03.7
00DF:  MOVF   00,W
00E0:  MOVWF  08
....................          delay_ms(5); 
00E1:  MOVLW  05
00E2:  MOVWF  30
00E3:  CALL   004
....................           
....................          PORTD=0XFF; //DANH CHO MO PHONG 
00E4:  MOVLW  FF
00E5:  MOVWF  08
....................          ra1=1;ra2=1;ra3=0; 
00E6:  BSF    05.1
00E7:  BSF    05.2
00E8:  BCF    05.3
....................          portd=maled7[donvi]; 
00E9:  MOVLW  20
00EA:  ADDWF  2C,W
00EB:  MOVWF  04
00EC:  BCF    03.7
00ED:  MOVF   00,W
00EE:  MOVWF  08
....................          delay_ms(5);         
00EF:  MOVLW  05
00F0:  MOVWF  30
00F1:  CALL   004
00F2:  GOTO   06C
....................       } 
.................... }      
00F3:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
