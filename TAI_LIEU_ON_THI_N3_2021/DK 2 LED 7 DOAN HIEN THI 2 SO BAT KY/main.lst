CCS PCM C Compiler, Version 5.015, 5967               01-Thg9-21 18:55

               Filename:   F:\VDK\TAI_LIEU_ON_THI_N3_2021\DK 2 LED 7 DOAN HIEN THI 2 SO BAT KY\main.lst

               ROM used:   83 words (1%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           16 (4%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... //MO PHONG CO 4 CON LED 7 DOAN CHI QUAN TAM 2 CON CUOI CUNG 
.................... //VI TRI LED CHUC VA DON VI CO THE DOI CHO NHAU 
.................... //HIEN THI 2 SO BAT KY 
....................  
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses hs 
.................... #use delay(clock=4M) 
0004:  MOVLW  2A
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #byte portd=0x08 
.................... #bit ra0=0x05.0 
.................... #bit ra1=0x05.1 
....................  
.................... int8 maled7[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90}; 
*
0024:  MOVLW  C0
0025:  BCF    03.5
0026:  MOVWF  20
0027:  MOVLW  F9
0028:  MOVWF  21
0029:  MOVLW  A4
002A:  MOVWF  22
002B:  MOVLW  B0
002C:  MOVWF  23
002D:  MOVLW  99
002E:  MOVWF  24
002F:  MOVLW  92
0030:  MOVWF  25
0031:  MOVLW  82
0032:  MOVWF  26
0033:  MOVLW  F8
0034:  MOVWF  27
0035:  MOVLW  80
0036:  MOVWF  28
0037:  MOVLW  90
0038:  MOVWF  29
.................... void main() 
*
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... {  
....................    set_tris_a(0x00); 
*
0039:  MOVLW  00
003A:  BSF    03.5
003B:  MOVWF  05
....................    set_tris_D(0x00);      
003C:  MOVWF  08
....................    while(1) 
....................    { 
....................       PORTD=0XFF; //DANH CHO MO PHONG 
003D:  MOVLW  FF
003E:  BCF    03.5
003F:  MOVWF  08
....................       RA0=1; 
0040:  BSF    05.0
....................       RA1=0; 
0041:  BCF    05.1
....................       portd=maled7[1];//SO HANG CHUC 
0042:  MOVF   21,W
0043:  MOVWF  08
....................       delay_ms(5); 
0044:  MOVLW  05
0045:  MOVWF  2A
0046:  CALL   004
....................        
....................       PORTD=0XFF; //DANH CHO MO PHONG 
0047:  MOVLW  FF
0048:  MOVWF  08
....................       RA0=0; 
0049:  BCF    05.0
....................       RA1=1; 
004A:  BSF    05.1
....................       portd=maled7[2];//SO HANG DON VI  
004B:  MOVF   22,W
004C:  MOVWF  08
....................       delay_ms(5); 
004D:  MOVLW  05
004E:  MOVWF  2A
004F:  CALL   004
0050:  BSF    03.5
0051:  GOTO   03D
....................    }       
.................... }      
0052:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
